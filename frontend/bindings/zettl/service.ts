// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Call as $Call, CancellablePromise as $CancellablePromise, Create as $Create } from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as pkg$0 from "./pkg/models.js";

export function AddSnippet(content: string, language: string): $CancellablePromise<number> {
    return $Call.ByID(124315977, content, language);
}

export function AppendLog(msg: string): $CancellablePromise<void> {
    return $Call.ByID(336368141, msg);
}

export function FindSnippets(q: string, before: number, limit: number): $CancellablePromise<pkg$0.SnippetPreview[]> {
    return $Call.ByID(1291141136, q, before, limit).then(($result: any) => {
        return $$createType1($result);
    });
}

export function FrontendReady(): $CancellablePromise<void> {
    return $Call.ByID(141859388);
}

export function GetSnippetDetail(id: number): $CancellablePromise<pkg$0.SnippetDetail> {
    return $Call.ByID(4198772317, id).then(($result: any) => {
        return $$createType2($result);
    });
}

export function GetUISettings(): $CancellablePromise<pkg$0.UISettings> {
    return $Call.ByID(3371573040).then(($result: any) => {
        return $$createType3($result);
    });
}

export function ListStyles(): $CancellablePromise<string[]> {
    return $Call.ByID(2922033651).then(($result: any) => {
        return $$createType4($result);
    });
}

export function Paste(text: string, paste: boolean): $CancellablePromise<void> {
    return $Call.ByID(3113007736, text, paste);
}

export function PurgeExpired(): $CancellablePromise<void> {
    return $Call.ByID(1375670581);
}

export function SetFontSize(size: number): $CancellablePromise<void> {
    return $Call.ByID(3659923651, size);
}

export function SetRetentionDays(days: number): $CancellablePromise<void> {
    return $Call.ByID(3297508348, days);
}

export function SetSyntaxStyle(style: string): $CancellablePromise<void> {
    return $Call.ByID(1494376189, style);
}

export function SetToggleHotkey(ev: pkg$0.Shortcut): $CancellablePromise<void> {
    return $Call.ByID(869068813, ev);
}

export function SetWidth(w: number): $CancellablePromise<void> {
    return $Call.ByID(3917375589, w);
}

// Private type creation functions
const $$createType0 = pkg$0.SnippetPreview.createFrom;
const $$createType1 = $Create.Array($$createType0);
const $$createType2 = pkg$0.SnippetDetail.createFrom;
const $$createType3 = pkg$0.UISettings.createFrom;
const $$createType4 = $Create.Array($Create.Any);
